# In LLVM<19, lljit does not respect the CodeModel setting from the target machine
# builder class and unconditionally sets the "Small" code model, which can lead to
# compilation failures for large JIT modules. This has been fixed in the upcoming
# LLVM 19 version. References:
#
# https://github.com/llvm/llvm-project/issues/88115
# https://github.com/llvm/llvm-project/pull/90599

diff --git a/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp b/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp
index 568b2ececaa09..6a8fbac8233f4 100644
--- a/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp
+++ b/llvm/lib/ExecutionEngine/Orc/LLJIT.cpp
@@ -801,8 +801,9 @@ Error LLJITBuilderState::prepareForConstruction() {
       break;
     }
     if (UseJITLink) {
+      if (!JTMB->getCodeModel())
+        JTMB->setCodeModel(CodeModel::Small);
       JTMB->setRelocationModel(Reloc::PIC_);
-      JTMB->setCodeModel(CodeModel::Small);
       CreateObjectLinkingLayer =
           [](ExecutionSession &ES,
              const Triple &) -> Expected<std::unique_ptr<ObjectLayer>> {
