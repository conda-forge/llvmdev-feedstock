{% set shortversion = "3.9" %}
{% set version = "3.9.1" %}
{% set sha256 = "1fd90354b9cf19232e8f168faf2220e79be555df3aa743242700879e8fd329ee" %}

{% set llvm_variant = os.environ.get('LLVM_VARIANT', 'default') %}
{% set build_number = "3" %}
{% set build_string = "{}_{}".format(llvm_variant, build_number) %}

package:
  name: llvmdev
  version: {{ version }}

source:
  fn: llvm-{{ version }}.src.tar.xz
  url: http://llvm.org/releases/{{ version }}/llvm-{{ version }}.src.tar.xz
  sha256: {{ sha256 }}
  patches:
    # https://llvm.org/bugs/show_bug.cgi?id=15356
    - llvm-elf-relocation.patch
    # https://llvm.org/bugs/show_bug.cgi?id=25565
    - llvm-build-race-condition.patch
    # http://lists.llvm.org/pipermail/llvm-dev/2016-January/094520.html
    - llvm-lto-static.patch  # [win]
{% if llvm_variant == "cling" %}
    - cling-patches/0001-Add-interface-to-create-DyLib-from-dlopen-handle.patch
    - cling-patches/0002-Add-cling-as-tool-to-be-built.patch
    - cling-patches/0003-Do-NOT-remove-original-functions-after-inlining-them.patch
    - cling-patches/0004-From-Lang-Hames-first-step-towards-RuntimeDyld-resol.patch
    - cling-patches/0005-Weak-symbols-can-be-functions-too.patch
    - cling-patches/0006-Update-DEBUG-to-current-llvm-API.patch
    - cling-patches/0007-Mark-weak-symbols-weak-apparently-NFC.patch
    - cling-patches/0008-Weak-undefined-symbols-should-not-trigger-the-emissi.patch
    - cling-patches/0009-Adapt-to-llvm-r272382.patch
    - cling-patches/0010-Enable-unicode-output-on-terminals.patch
{% endif %}

build:
  number: {{ build_number }}
  string: {{ build_string }}
  skip:  true  # [py<36]

  features:   # [win and py36]
    - vc14    # [win and py36]

  track_features:
    - llvm{{ llvm_variant }}

requirements:
  build:
    - toolchain
    - cmake
    # Needed to unpack the source tarball
    - m2-xz  # [py27 and win32]
    - m2w64-xz  # [py27 and win64]
    # Needed to build LLVM
    - python
    - system  # [linux and not armv7l]
  run:
    - system  # [linux and not armv7l]
    - vs2015_runtime  # [win and py36]

test:
  requires:                                                  # [win]
    - python {{ environ['PY_VER'] + '*' }}                   # [win]

  commands:
    - $PREFIX/bin/llvm-config --libs                         # [not win]
    - $PREFIX/bin/llc -version                               # [not win]

    - if not exist %LIBRARY_INC%\\llvm\\Pass.h exit 1        # [win]

    - test -f $PREFIX/include/llvm/Pass.h                    # [unix]
    - test -f $PREFIX/lib/libLLVMCore.a                      # [not win]

about:
  home: http://llvm.org/
  dev_url: https://github.com/llvm-mirror/llvm
  license: NCSA
  license_file: LICENSE.TXT
  summary: Development headers and libraries for LLVM

extra:
  recipe-maintainers:
    - inducer
    - pitrou
    - jakirkham
    - mingwandroid
    - mattwala
    - SylvainCorlay
