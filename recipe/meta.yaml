{% set version = "6.0.0" %}
{% set sha256 = "1ff53c915b4e761ef400b803f07261ade637b0c269d99569f18040f3dcee4408" %}

{% set llvm_variant = os.environ.get('LLVM_VARIANT', 'default') %}
{% set build_number = 5 %}

package:
  name: llvmdev
  version: {{ version }}

source:
  fn: llvm-{{ version }}.src.tar.xz
  url: http://llvm.org/releases/{{ version }}/llvm-{{ version }}.src.tar.xz
  sha256: {{ sha256 }}
  patches:
    - llvm-lto-static.patch   # [win]
    - export_LLVMInitializeInstCombine.diff
    - twine_cfg_undefined_behavior.patch
    - D47188-svml.patch
{% if llvm_variant == "cling" %}
    - cling-patches/0001-Add-interface-to-create-DyLib-from-dlopen-handle.patch
    - cling-patches/0002-Add-cling-as-tool-to-be-built.patch
    - cling-patches/0003-Do-NOT-remove-original-functions-after-inlining-them.patch
    - cling-patches/0004-From-Lang-Hames-first-step-towards-RuntimeDyld-resol.patch
    - cling-patches/0005-Update-DEBUG-to-current-llvm-API.patch
    - cling-patches/0006-Mark-weak-symbols-weak-apparently-NFC.patch
    - cling-patches/0007-Weak-undefined-symbols-should-not-trigger-the-emissi.patch
    - cling-patches/0008-Adapt-to-llvm-r272382.patch
    - cling-patches/0009-Enable-unicode-output-on-terminals.patch
{% endif %}

build:
  number: {{ build_number }}
  string: {{ llvm_variant }}_{{ build_number }}
  skip:  true  # [py<36]

{% if llvm_variant == "cling" %}
  features:
    - cling
    - vc14     # [win and py36]
{% else %}
{% endif %}

requirements:
  build:
    - cmake
    - ninja  # [win]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    # Needed to unpack the source tarball
    - m2w64-xz  # [py27 and win]
    # Needed to build LLVM
    - python
  run:
    - llvm-meta {{ version }}|{{ version }}.*

test:
  requires:
    - python {{ environ['PY_VER'] + '*' }}                   # [win]
{% if llvm_variant == "cling" %}
    - cling-patches
{% endif %}
  files:
    - numba-3016.ll

  commands:
    - $PREFIX/bin/llvm-config --libs                         # [not win]
    - $PREFIX/bin/llc -version                               # [not win]

    - if not exist %LIBRARY_INC%\\llvm\\Pass.h exit 1        # [win]

    - test -f $PREFIX/include/llvm/Pass.h                    # [unix]
    - test -f $PREFIX/lib/libLLVMCore.a                      # [not win]

    - opt -S -vector-library=SVML -mcpu=haswell -O3 numba-3016.ll -o out.ll
    - findstr __svml_sin4 out.ll                             # [win]
    - grep __svml_sin4 out.ll                                # [unix]

about:
  home: http://llvm.org/
  dev_url: https://github.com/llvm-mirror/llvm
  license: NCSA
  license_file: LICENSE.TXT
  summary: Development headers and libraries for LLVM

extra:
  recipe-maintainers:
    - inducer
    - pitrou
    - jakirkham
    - mingwandroid
    - mattwala
    - SylvainCorlay
    - isuruf
